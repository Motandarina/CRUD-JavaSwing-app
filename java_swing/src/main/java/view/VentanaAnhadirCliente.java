package view;

import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author Lucía Méndez Rodríguez
 */
public class VentanaAnhadirCliente extends javax.swing.JDialog {

    /**
     * Creates new form VentanaAnhadirCliente
     */
    public VentanaAnhadirCliente(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setTitle("Añadir Cliente");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBackGroundVentanaAnhadir = new javax.swing.JPanel();
        labelTituloAnhadirCliente = new javax.swing.JLabel();
        containerInfoCliente = new javax.swing.JPanel();
        labelID = new javax.swing.JLabel();
        textFieldID = new javax.swing.JTextField();
        labelNombre = new javax.swing.JLabel();
        textFieldNombre = new javax.swing.JTextField();
        labelApellidos = new javax.swing.JLabel();
        textFieldApellidos = new javax.swing.JTextField();
        labelTlf = new javax.swing.JLabel();
        textFieldTlf = new javax.swing.JTextField();
        labelEmail = new javax.swing.JLabel();
        textFieldEmail = new javax.swing.JTextField();
        labelDir = new javax.swing.JLabel();
        textFieldDir = new javax.swing.JTextField();
        buttonConfirmarCliente = new javax.swing.JButton();
        buttonCancelarCliente = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(630, 400));

        panelBackGroundVentanaAnhadir.setBackground(new java.awt.Color(0, 79, 86));
        panelBackGroundVentanaAnhadir.setPreferredSize(new java.awt.Dimension(600, 370));

        labelTituloAnhadirCliente.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        labelTituloAnhadirCliente.setForeground(new java.awt.Color(255, 255, 255));
        labelTituloAnhadirCliente.setText("Añadir cliente");

        containerInfoCliente.setBackground(new java.awt.Color(255, 255, 255));
        containerInfoCliente.setPreferredSize(new java.awt.Dimension(580, 380));

        labelID.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        labelID.setForeground(new java.awt.Color(0, 79, 86));
        labelID.setText("ID:");

        textFieldID.setMargin(new java.awt.Insets(2, 8, 2, 8));
        textFieldID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldIDActionPerformed(evt);
            }
        });

        labelNombre.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        labelNombre.setForeground(new java.awt.Color(0, 79, 86));
        labelNombre.setText("Nombre:");

        textFieldNombre.setMargin(new java.awt.Insets(2, 8, 2, 8));

        labelApellidos.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        labelApellidos.setForeground(new java.awt.Color(0, 79, 86));
        labelApellidos.setText("Apellidos:");

        textFieldApellidos.setMargin(new java.awt.Insets(2, 8, 2, 8));

        labelTlf.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        labelTlf.setForeground(new java.awt.Color(0, 79, 86));
        labelTlf.setText("Teléfono:");

        textFieldTlf.setMargin(new java.awt.Insets(2, 8, 2, 8));

        labelEmail.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        labelEmail.setForeground(new java.awt.Color(0, 79, 86));
        labelEmail.setText("Email:");

        textFieldEmail.setMargin(new java.awt.Insets(2, 8, 2, 8));
        textFieldEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldEmailActionPerformed(evt);
            }
        });

        labelDir.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        labelDir.setForeground(new java.awt.Color(0, 79, 86));
        labelDir.setText("Dirección:");

        textFieldDir.setMargin(new java.awt.Insets(2, 8, 2, 8));

        buttonConfirmarCliente.setBackground(new java.awt.Color(0, 154, 167));
        buttonConfirmarCliente.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        buttonConfirmarCliente.setForeground(new java.awt.Color(255, 255, 255));
        buttonConfirmarCliente.setText("Confirmar");
        buttonConfirmarCliente.setBorderPainted(false);
        buttonConfirmarCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonConfirmarCliente.setMaximumSize(new java.awt.Dimension(136, 24));
        buttonConfirmarCliente.setPreferredSize(new java.awt.Dimension(136, 24));
        buttonConfirmarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonConfirmarClienteActionPerformed(evt);
            }
        });

        buttonCancelarCliente.setBackground(new java.awt.Color(153, 0, 0));
        buttonCancelarCliente.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        buttonCancelarCliente.setForeground(new java.awt.Color(255, 255, 255));
        buttonCancelarCliente.setText("Cancelar");
        buttonCancelarCliente.setBorderPainted(false);
        buttonCancelarCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonCancelarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout containerInfoClienteLayout = new javax.swing.GroupLayout(containerInfoCliente);
        containerInfoCliente.setLayout(containerInfoClienteLayout);
        containerInfoClienteLayout.setHorizontalGroup(
            containerInfoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerInfoClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(containerInfoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelID, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNombre)
                    .addGroup(containerInfoClienteLayout.createSequentialGroup()
                        .addGroup(containerInfoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelDir)
                            .addComponent(labelTlf)
                            .addComponent(labelEmail))
                        .addGap(18, 18, 18)
                        .addGroup(containerInfoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldTlf, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldDir, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(containerInfoClienteLayout.createSequentialGroup()
                        .addComponent(labelApellidos)
                        .addGap(18, 18, 18)
                        .addGroup(containerInfoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(containerInfoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(textFieldNombre, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                                .addComponent(textFieldID, javax.swing.GroupLayout.Alignment.LEADING)))))
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(containerInfoClienteLayout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addComponent(buttonConfirmarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonCancelarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(140, 140, 140))
        );
        containerInfoClienteLayout.setVerticalGroup(
            containerInfoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerInfoClienteLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(containerInfoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelID)
                    .addComponent(textFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(containerInfoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNombre)
                    .addComponent(textFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(containerInfoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelApellidos)
                    .addComponent(textFieldApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(containerInfoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTlf)
                    .addComponent(textFieldTlf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(containerInfoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEmail)
                    .addComponent(textFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(containerInfoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDir)
                    .addComponent(textFieldDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(containerInfoClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonConfirmarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonCancelarCliente))
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout panelBackGroundVentanaAnhadirLayout = new javax.swing.GroupLayout(panelBackGroundVentanaAnhadir);
        panelBackGroundVentanaAnhadir.setLayout(panelBackGroundVentanaAnhadirLayout);
        panelBackGroundVentanaAnhadirLayout.setHorizontalGroup(
            panelBackGroundVentanaAnhadirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBackGroundVentanaAnhadirLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(panelBackGroundVentanaAnhadirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(containerInfoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTituloAnhadirCliente))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        panelBackGroundVentanaAnhadirLayout.setVerticalGroup(
            panelBackGroundVentanaAnhadirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBackGroundVentanaAnhadirLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(labelTituloAnhadirCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(containerInfoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBackGroundVentanaAnhadir, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBackGroundVentanaAnhadir, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textFieldIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldIDActionPerformed

    private void textFieldEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldEmailActionPerformed

    private void buttonConfirmarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonConfirmarClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonConfirmarClienteActionPerformed

    private void buttonCancelarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelarClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonCancelarClienteActionPerformed

    // Métodos para añadir listeners a los botones de la interfaz de usuario
    DocumentListener documentListener = new DocumentListener() {
        @Override
        public void changedUpdate(DocumentEvent e) {
            checkFields();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            checkFields();
        }

        @Override
        public void insertUpdate(DocumentEvent e) {
            checkFields();
        }
    };

    /**
     * Verifica si todos los campos de texto están llenos. Si algún campo está
     * vacío, muestra un mensaje de advertencia.
     *
     * @return true si todos los campos están llenos, false en caso contrario.
     */
    public boolean checkFields() {
        boolean allFieldsFilled = !textFieldID.getText().trim().isEmpty()
                && !textFieldNombre.getText().trim().isEmpty()
                && !textFieldApellidos.getText().trim().isEmpty()
                && !textFieldTlf.getText().trim().isEmpty()
                && !textFieldEmail.getText().trim().isEmpty()
                && !textFieldDir.getText().trim().isEmpty();
        if (!allFieldsFilled) {
            JOptionPane.showMessageDialog(null,
                    "Debes rellenar todos los campos",
                    "Campos vacíos", JOptionPane.ERROR_MESSAGE);
        }
        return allFieldsFilled;
    }

    /**
     * Inicializa los DocumentListeners para los campos de texto, asegurando que
     * checkFields() se llame cada vez que el contenido de los campos cambie.
     */
    public void iniciar() {
        textFieldID.getDocument().addDocumentListener(documentListener);
        textFieldNombre.getDocument().addDocumentListener(documentListener);
        textFieldApellidos.getDocument().addDocumentListener(documentListener);
        textFieldTlf.getDocument().addDocumentListener(documentListener);
        textFieldEmail.getDocument().addDocumentListener(documentListener);
        textFieldDir.getDocument().addDocumentListener(documentListener);
    }

    /**
     * Añade un listener al botón para confirmar la adición de un cliente.
     *
     * @param listener El listener a añadir.
     */
    public void addConfirmarClienteListener(ActionListener listener) {
        buttonConfirmarCliente.addActionListener(listener);
    }

    /**
     * Añade un listener al botón para cancelar la adición de un cliente.
     *
     * @param listener El listener a añadir.
     */
    public void addCancelarClienteListener(ActionListener listener) {
        buttonCancelarCliente.addActionListener(listener);
    }

    // Métodos para obtener texto de los campos de la interfaz de usuario
    /**
     * Obtiene el ID del cliente desde el campo de texto.
     *
     * @return El ID del cliente.
     */
    public String getId() {
        return textFieldID.getText();
    }

    /**
     * Obtiene el nombre del cliente desde el campo de texto.
     *
     * @return El nombre del cliente.
     */
    public String getNombre() {
        return textFieldNombre.getText();
    }

    /**
     * Obtiene los apellidos del cliente desde el campo de texto.
     *
     * @return Los apellidos del cliente.
     */
    public String getApellidos() {
        return textFieldApellidos.getText();
    }

    /**
     * Obtiene el teléfono del cliente desde el campo de texto.
     *
     * @return El teléfono del cliente.
     */
    public String getTelefono() {
        return textFieldTlf.getText();
    }

    /**
     * Obtiene el correo electrónico del cliente desde el campo de texto.
     *
     * @return El correo electrónico del cliente.
     */
    public String getEmail() {
        return textFieldEmail.getText();
    }

    /**
     * Obtiene la dirección del cliente desde el campo de texto.
     *
     * @return La dirección del cliente.
     */
    public String getDireccion() {
        return textFieldDir.getText();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancelarCliente;
    private javax.swing.JButton buttonConfirmarCliente;
    private javax.swing.JPanel containerInfoCliente;
    private javax.swing.JLabel labelApellidos;
    private javax.swing.JLabel labelDir;
    private javax.swing.JLabel labelEmail;
    private javax.swing.JLabel labelID;
    private javax.swing.JLabel labelNombre;
    private javax.swing.JLabel labelTituloAnhadirCliente;
    private javax.swing.JLabel labelTlf;
    private javax.swing.JPanel panelBackGroundVentanaAnhadir;
    public javax.swing.JTextField textFieldApellidos;
    public javax.swing.JTextField textFieldDir;
    public javax.swing.JTextField textFieldEmail;
    public javax.swing.JTextField textFieldID;
    public javax.swing.JTextField textFieldNombre;
    public javax.swing.JTextField textFieldTlf;
    // End of variables declaration//GEN-END:variables
}
